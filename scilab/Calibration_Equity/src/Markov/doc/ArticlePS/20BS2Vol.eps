%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 600 780
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


1.3 1.3  scale 

/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
90 rotate 10 640 neg translate [0.5 5 div 0 0 0.5 5 div neg  0 3120 5 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
%Latex:\begin{picture}(6000,4240)(0,0)
%--use color 0 
0 Setcolor
fillsolid
[] 0 setdash
/WhiteLev 16 def
/Setgray { WhiteLev div setgray } def 
/Setcolor { WhiteLev div setgray } def 
/usecolor 0  def 
%--end use color 0 
/Times-Roman findfont 100 scf mul scalefont setfont
5 Thickness
-1 -1 200000 200000 setclipzone
fillsolid
/Times-Roman findfont 120 scf mul scalefont setfont
[] 0 setdash
fillsolid
 (drawbox) 4 [ 0]
[750 530 4500 3180 
] dogrey 
fillsolid
(70) 683 3886 0  0.00 [683 3776 134 140] Show
%Latex:\myput{683}{354}{12}{70}
 (drawsegs) 4 [ 0]
[750 3710 750 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1125 3710 1125 3741 
] dogrey 
(80) 1433 3886 0  0.00 [1433 3776 134 140] Show
%Latex:\myput{1433}{354}{12}{80}
 (drawsegs) 4 [ 0]
[1500 3710 1500 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1875 3710 1875 3741 
] dogrey 
(90) 2183 3886 0  0.00 [2183 3776 134 140] Show
%Latex:\myput{2183}{354}{12}{90}
 (drawsegs) 4 [ 0]
[2250 3710 2250 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[2625 3710 2625 3741 
] dogrey 
(100) 2899 3886 0  0.00 [2899 3776 202 140] Show
%Latex:\myput{2899}{354}{12}{100}
 (drawsegs) 4 [ 0]
[3000 3710 3000 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[3375 3710 3375 3741 
] dogrey 
(110) 3649 3886 0  0.00 [3649 3776 202 140] Show
%Latex:\myput{3649}{354}{12}{110}
 (drawsegs) 4 [ 0]
[3750 3710 3750 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[4125 3710 4125 3741 
] dogrey 
(120) 4399 3886 0  0.00 [4399 3776 202 140] Show
%Latex:\myput{4399}{354}{12}{120}
 (drawsegs) 4 [ 0]
[4500 3710 4500 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[4875 3710 4875 3741 
] dogrey 
(130) 5149 3886 0  0.00 [5149 3776 202 140] Show
%Latex:\myput{5149}{354}{12}{130}
 (drawsegs) 4 [ 0]
[5250 3710 5250 3773 
] dogrey 
(280e-3) 274 3740 0  0.00 [274 3630 404 140] Show
%Latex:\myput{274}{500}{12}{280e-3}
 (drawsegs) 4 [ 0]
[750 3710 690 3710 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3551 720 3551 
] dogrey 
(284e-3) 274 3422 0  0.00 [274 3312 404 140] Show
%Latex:\myput{274}{818}{12}{284e-3}
 (drawsegs) 4 [ 0]
[750 3392 690 3392 
] dogrey 
 (drawsegs) 4 [ 0]
[750 3233 720 3233 
] dogrey 
(288e-3) 274 3104 0  0.00 [274 2994 404 140] Show
%Latex:\myput{274}{1136}{12}{288e-3}
 (drawsegs) 4 [ 0]
[750 3074 690 3074 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2915 720 2915 
] dogrey 
(292e-3) 274 2786 0  0.00 [274 2676 404 140] Show
%Latex:\myput{274}{1454}{12}{292e-3}
 (drawsegs) 4 [ 0]
[750 2756 690 2756 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2597 720 2597 
] dogrey 
(296e-3) 274 2468 0  0.00 [274 2358 404 140] Show
%Latex:\myput{274}{1772}{12}{296e-3}
 (drawsegs) 4 [ 0]
[750 2438 690 2438 
] dogrey 
 (drawsegs) 4 [ 0]
[750 2279 720 2279 
] dogrey 
(300e-3) 274 2150 0  0.00 [274 2040 404 140] Show
%Latex:\myput{274}{2090}{12}{300e-3}
 (drawsegs) 4 [ 0]
[750 2120 690 2120 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1961 720 1961 
] dogrey 
(304e-3) 274 1832 0  0.00 [274 1722 404 140] Show
%Latex:\myput{274}{2408}{12}{304e-3}
 (drawsegs) 4 [ 0]
[750 1802 690 1802 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1643 720 1643 
] dogrey 
(308e-3) 274 1514 0  0.00 [274 1404 404 140] Show
%Latex:\myput{274}{2726}{12}{308e-3}
 (drawsegs) 4 [ 0]
[750 1484 690 1484 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1325 720 1325 
] dogrey 
(312e-3) 274 1196 0  0.00 [274 1086 404 140] Show
%Latex:\myput{274}{3044}{12}{312e-3}
 (drawsegs) 4 [ 0]
[750 1166 690 1166 
] dogrey 
 (drawsegs) 4 [ 0]
[750 1007 720 1007 
] dogrey 
(316e-3) 274 878 0  0.00 [274 768 404 140] Show
%Latex:\myput{274}{3362}{12}{316e-3}
 (drawsegs) 4 [ 0]
[750 848 690 848 
] dogrey 
 (drawsegs) 4 [ 0]
[750 689 720 689 
] dogrey 
(320e-3) 274 560 0  0.00 [274 450 404 140] Show
%Latex:\myput{274}{3680}{12}{320e-3}
 (drawsegs) 4 [ 0]
[750 530 690 530 
] dogrey 
[] 0 setdash
fillsolid
750 530 4500 3180 setclipzone
[] 0 setdash
/closeflag false def
 (drawpoly) 300 [ 0]
[-1055 2120 -1018 2120 -982 2120 -944 2120 -907 2120 -869 2120 -831 2120 -792 2120 -753 2120 -713 2120 
-673 2120 -633 2120 -592 2120 -550 2120 -509 2120 -466 2120 -424 2120 -381 2120 -337 2120 -293 2120 
-249 2120 -204 2120 -158 2120 -113 2120 -66 2120 -19 2120 28 2120 76 2120 124 2120 173 2120 
223 2120 272 2120 323 2120 374 2120 425 2120 477 2120 530 2120 583 2120 637 2120 691 2120 
746 2120 801 2120 857 2120 914 2120 971 2120 1029 2120 1088 2120 1147 2120 1206 2120 1267 2120 
1328 2120 1389 2120 1451 2120 1514 2120 1578 2120 1642 2120 1707 2120 1773 2120 1839 2120 1906 2120 
1974 2120 2042 2120 2111 2120 2181 2120 2252 2120 2323 2120 2395 2120 2468 2120 2542 2120 2616 2120 
2691 2120 2767 2120 2844 2120 2922 2120 3000 2120 3079 2120 3159 2120 3240 2120 3322 2120 3405 2120 
3488 2120 3573 2120 3658 2120 3744 2120 3831 2120 3919 2120 4008 2120 4098 2120 4189 2120 4281 2120 
4374 2120 4468 2120 4562 2120 4658 2120 4755 2120 4853 2120 4952 2120 5051 2120 5152 2120 5254 2120 
5358 2120 5462 2120 5567 2120 5673 2120 5781 2120 5890 2120 5999 2120 6110 2120 6222 2120 6336 2120 
6450 2120 6566 2120 6683 2120 6801 2120 6921 2120 7041 2120 7163 2120 7286 2120 7411 2120 7537 2120 
7664 2120 7793 2120 7923 2120 8054 2120 8187 2120 8321 2120 8456 2120 8593 2120 8731 2120 8871 2120 
9013 2120 9155 2120 9300 2120 9445 2120 9593 2120 9742 2120 9892 2120 10044 2120 10198 2120 10353 2120 
10510 2120 10669 2120 10829 2120 10991 2120 11155 2120 11321 2120 11488 2120 11657 2120 11827 2120 12000 2120 
] dogrey 
fillsolid
/absolu true def
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#2b put
 (drawpolymark) 300 [ 0]
[-1055 10586 -1018 11441 -982 11525 -944 11204 -907 10653 -869 9990 -831 9286 -792 8586 -753 7908 -713 7263 
-673 6657 -633 6092 -592 5575 -550 5110 -509 4701 -466 4352 -424 4063 -381 3833 -337 3657 -293 3532 
-249 3441 -204 3378 -158 3327 -113 3286 -66 3245 -19 3210 28 3184 76 3158 124 3145 173 3133 
223 3132 272 3127 323 3128 374 3122 425 3116 477 3097 530 3074 583 3040 637 3001 691 2950 
746 2881 801 2789 857 2662 914 2495 971 2271 1029 1989 1088 1639 1147 1247 1206 847 1267 550 
1328 336 1389 193 1451 96 1514 42 1578 19 1642 26 1707 64 1773 138 1839 252 1906 417 
1974 657 2042 924 2111 1322 2181 1648 2252 1881 2323 2026 2395 2130 2468 2218 2542 2306 2616 2378 
2691 2418 2767 2430 2844 2439 2922 2473 3000 2524 3079 2581 3159 2624 3240 2612 3322 2545 3405 2429 
3488 2278 3573 2127 3658 2001 3744 1896 3831 1783 3919 1610 4008 1343 4098 1001 4189 808 4281 621 
4374 508 4468 461 4562 480 4658 601 4755 792 4853 1095 4952 1466 5051 1811 5152 2116 5254 2363 
5358 2562 5462 2713 5567 2830 5673 2915 5781 2980 5890 3024 5999 3056 6110 3078 6222 3094 6336 3106 
6450 3115 6566 3120 6683 3125 6801 3131 6921 3137 7041 3145 7163 3154 7286 3160 7411 3170 7537 3174 
7664 3184 7793 3197 7923 3204 8054 3219 8187 3225 8321 3253 8456 3281 8593 3334 8731 3401 8871 3490 
9013 3599 9155 3751 9300 3961 9445 4247 9593 4605 9742 5040 9892 5546 10044 6128 10198 6796 10353 7546 
10510 8399 10669 9351 10829 10432 10991 11650 11155 13051 11321 14647 11488 16482 11657 18561 11827 20899 12000 23383 
] dogrey 
/absolu true def
/Times-Roman findfont 120 scf mul scalefont setfont
[50 20 50 20 ] 0 setdash
/closeflag false def
 (drawpoly) 300 [ 0]
[-1055 2120 -1018 2120 -982 2120 -944 2120 -907 2120 -869 2120 -831 2120 -792 2120 -753 2120 -713 2120 
-673 2120 -633 2120 -592 2120 -550 2120 -509 2120 -466 2120 -424 2120 -381 2120 -337 2120 -293 2120 
-249 2120 -204 2120 -158 2120 -113 2120 -66 2120 -19 2120 28 2120 76 2120 124 2120 173 2120 
223 2120 272 2120 323 2120 374 2120 425 2120 477 2120 530 2120 583 2120 637 2120 691 2120 
746 2120 801 2120 857 2120 914 2120 971 2120 1029 2120 1088 2120 1147 2120 1206 2120 1267 2120 
1328 2120 1389 2120 1451 2120 1514 2120 1578 2120 1642 2120 1707 2120 1773 2120 1839 2120 1906 2120 
1974 2120 2042 2120 2111 2120 2181 2120 2252 2120 2323 2120 2395 2120 2468 2120 2542 2120 2616 2120 
2691 2120 2767 2120 2844 2120 2922 2120 3000 2120 3079 2120 3159 2120 3240 2120 3322 2120 3405 2120 
3488 2120 3573 2120 3658 2120 3744 2120 3831 2120 3919 2120 4008 2120 4098 2120 4189 2120 4281 2120 
4374 2120 4468 2120 4562 2120 4658 2120 4755 2120 4853 2120 4952 2120 5051 2120 5152 2120 5254 2120 
5358 2120 5462 2120 5567 2120 5673 2120 5781 2120 5890 2120 5999 2120 6110 2120 6222 2120 6336 2120 
6450 2120 6566 2121 6683 2121 6801 2121 6921 2121 7041 2121 7163 2121 7286 2121 7411 2121 7537 2121 
7664 2121 7793 2121 7923 2121 8054 2121 8187 2121 8321 2121 8456 2121 8593 2121 8731 2121 8871 2121 
9013 2121 9155 2121 9300 2121 9445 2121 9593 2121 9742 2121 9892 2121 10044 2121 10198 2121 10353 2121 
10510 2121 10669 2121 10829 2121 10991 2121 11155 2122 11321 2122 11488 2122 11657 2122 11827 2122 12000 2122 
] dogrey 
fillsolid
/absolu true def
[50 30 20 30 ] 0 setdash
/closeflag false def
 (drawpoly) 300 [ 0]
[-1055 2948 -1018 2937 -982 2926 -944 2915 -907 2904 -869 2892 -831 2881 -792 2869 -753 2857 -713 2846 
-673 2834 -633 2821 -592 2809 -550 2797 -509 2784 -466 2772 -424 2759 -381 2746 -337 2733 -293 2719 
-249 2706 -204 2693 -158 2679 -113 2665 -66 2651 -19 2637 28 2623 76 2609 124 2594 173 2579 
223 2565 272 2550 323 2534 374 2519 425 2504 477 2488 530 2472 583 2456 637 2440 691 2424 
746 2407 801 2391 857 2374 914 2357 971 2340 1029 2322 1088 2305 1147 2287 1206 2269 1267 2251 
1328 2233 1389 2214 1451 2196 1514 2177 1578 2158 1642 2138 1707 2106 1773 2070 1839 2058 1906 2094 
1974 2131 2042 2127 2111 2124 2181 2125 2252 2128 2323 2129 2395 2129 2468 2128 2542 2124 2616 2120 
2691 2117 2767 2113 2844 2113 2922 2113 3000 2117 3079 2120 3159 2123 3240 2126 3322 2124 3405 2122 
3488 2119 3573 2116 3658 2116 3744 2118 3831 2124 3919 2133 4008 2144 4098 2119 4189 2087 4281 2095 
4374 2110 4468 2140 4562 2169 4658 2199 4755 2230 4853 2260 4952 2291 5051 2322 5152 2354 5254 2386 
5358 2418 5462 2451 5567 2484 5673 2517 5781 2551 5890 2585 5999 2619 6110 2654 6222 2689 6336 2724 
6450 2760 6566 2796 6683 2833 6801 2870 6921 2907 7041 2945 7163 2983 7286 3022 7411 3061 7537 3100 
7664 3140 7793 3180 7923 3221 8054 3262 8187 3303 8321 3345 8456 3387 8593 3430 8731 3474 8871 3517 
9013 3562 9155 3606 9300 3651 9445 3697 9593 3743 9742 3790 9892 3837 10044 3884 10198 3932 10353 3981 
10510 4030 10669 4080 10829 4130 10991 4181 11155 4232 11321 4284 11488 4336 11657 4389 11827 4442 12000 4496 
] dogrey 
fillsolid
/absolu true def
[] 0 setdash
fillsolid
-1 -1 200000 200000 setclipzone
[] 0 setdash
fillsolid
 (drawbox) 4 [ 0]
[3365 3169 1840 488 
] dogrey 
fillsolid
 (drawsegs) 4 [ 0]
[3410 3270 3635 3270 
] dogrey 
(Real volatility) 3680 3278 0  0.00 [3680 3168 1011 140] Show
%Latex:\myput{3680}{962}{12}{Real volatility}
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#2b put
 (drawpolymark) 2 [ 0]
[3523 3366 
] dogrey 
/absolu true def
/Times-Roman findfont 120 scf mul scalefont setfont
[] 0 setdash
fillsolid
fillsolid
(Approached Volatility) 3680 3373 0  0.00 [3680 3263 1415 140] Show
%Latex:\myput{3680}{867}{12}{Approached Volatility}
 (drawsegs) 4 [ 1]
[3410 3461 3635 3461 
] dogrey 
(Real Implied volatility) 3680 3469 0  0.00 [3680 3359 1550 140] Show
%Latex:\myput{3680}{771}{12}{Real Implied volatility}
 (drawsegs) 4 [ 2]
[3410 3556 3635 3556 
] dogrey 
(Approached Implied volatility) 3680 3564 0  0.00 [3680 3454 1954 140] Show
%Latex:\myput{3680}{676}{12}{Approached Implied volatility}
[] 0 setdash
fillsolid
%Latex:\end{picture}
 showpage

 end saved restore 

