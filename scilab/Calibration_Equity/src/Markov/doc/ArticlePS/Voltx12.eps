%!PS-Adobe-2.0 EPSF-2.0
%%BoundingBox: 0 0 600 780
%%
%%Scilab Postscript File (1995-1997 J.Ph Chancelier)
%%EndComments
/saved save def 
/$pictdict 100 dict def
$pictdict begin

/dogrey
{ /Arraybox exch def
	/Arraygrey exch def
	/nargs exch def 
	/func exch cvx def
	Arraybox 0 nargs getinterval Arraygrey 0 get func 
	1 1 Arraygrey length 1 sub 
	{/i exch def
	Arraybox i nargs mul nargs getinterval 
	Arraygrey i get func
	}for
} def
%--------------------------------------------
% [x y width height] nivgris drawbox 
% si niv gris > 1.0 alors on fait un stroke 
% sans closepath 
%--------------------------------------------

/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 


/drawbox 
	{/glev exch def /Ar exch def 
	/x Ar 0 get def /y Ar 1 get def 
	/w Ar 2 get def /h Ar 3 get def 
	newpath
	x y moveto
	x w add y lineto
	x w add y h add lineto
	x y h add lineto
	glev 1 ge 
	{ % filling 
	 closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill 
		grestore}
	{ 
	  % drawing 
	  glev -1 le 
	  {
    	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax xsetgray
		 stroke grestore  }
	  { closepath stroke} ifelse 
	} ifelse
} def 

%--------------------------------------------
% [x y width height] clearzone
%--------------------------------------------
/clearzone
        {/Ar exch def
        /x Ar 0 get def /y Ar 1 get def
        /w Ar 2 get def /h Ar 3 get def
        newpath
        x y moveto
        x w add y lineto
        x w add y h add lineto
        x y h add lineto
	closepath gsave background Setcolor eofill grestore
} def

%------------------------------------------------------
% polyline stroke or polygon fill or both 
%------------------------------------------------------
/absolu true def 
/closeflag false def 

/lmin { /y exch def /x exch def x y le { x  } {  y  } ifelse } def
/lmax { /y exch def /x exch def x y le { y } {  x } ifelse } def 


/drawpoly
	{/glev exch def /Ar exch def
	newpath
	Ar 0 get Ar 1 get moveto 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get absolu {lineto} {rlineto} ifelse
	}for
	glev -1 le 
	{ % filling the polygon with current pattern ( gray or color)
	  closepath gsave glev neg 1 sub WhiteLev 2 add lmin 0 lmax Setgray eofill grestore }
	{ glev 1 ge 
	   { % drawing the polygon with current dash style or color 
	     % XXXXX : a voir c'est pas clair il faudrait sauver 
	     % and filling it with other color (glev) 
	     closepath gsave glev 1 sub WhiteLev 2 add lmin 0 lmax Setgray 
		 eofill grestore stroke }
	   {% drawing the polygon with current style 
	    closeflag {closepath} if stroke} 
	ifelse }
	ifelse 
} def 

%------------------------------------------------------
% segments non connectes 
%------------------------------------------------------

/drawsegs
	{/glev exch def /Ar exch def
	% when  b&w is used drawsegs uses dash not gray levels 
	newpath
	Ar 0 get Ar 1 get moveto Ar 2 get Ar 3 get lineto 
	gsave glev xsetgray stroke grestore
	4 4 Ar length 3 sub 
	{/i exch def
	newpath 
	Ar i get Ar i 1 add get moveto
	Ar i 2 add get Ar i 3 add get lineto 
	gsave glev xsetgray stroke grestore
	}for
} def 


%------------------------------------------------------
% unconected arrows
%-----------------------------------------------------

/drawarrows
	{/arsize10 exch def /Ar exch def
	Ar 0 get  Ar 1 get Ar 2 get Ar 3 get arsize10 drawarrow
	4 4 Ar length 3 sub 
	{/i exch def
	Ar i get Ar i 1 add get  Ar i 2 add get  Ar i 3 add get arsize10 
	drawarrow
	}for
} def 
		
/cos20 20 cos def
/sin20 20 sin def

/drawarrow                                
  { 
      /arsize exch 10 div def 
      /tipy exch def /tipx exch def       
      /taily exch def /tailx exch def
      /dx tipx tailx sub  def               
      /dy tipy taily sub  def               
      newpath tipx tipy moveto tailx taily lineto stroke   
      /norme dx dx mul dy dy mul add sqrt def 
      norme 1.e-8 ge 
	{
	 arsize dx mul norme div /dx1 exch def 
	 arsize dy mul norme div /dy1 exch def 
	 /depx tipx cos20 dx1 mul add def 
	/depy  tipy cos20 dy1 mul add def 
	newpath depx depy moveto 
	cos20 neg dx1 mul sin20 dy1 mul sub depx add
	sin20 dx1  mul cos20 dy1 mul sub depy add lineto 
	cos20 neg dx1 mul sin20 dy1 mul add  depx add
	sin20 neg dx1 mul cos20 dy1 mul sub depy add lineto closepath 
	fill
	} {} ifelse 
  } def


%------------------------------------------------------
% cercle ou portions de cercle 
% attention argument (x y w h angl1*64 angl2*64 )
% devrait tracer une ellipse a modifier donc 
%------------------------------------------------------

/fillarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	glev WhiteLev le
	{ % filling 
	newpath
	cx cy moveto 
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add  64 div neg
	 Ar 4 get 64 div neg  arc closepath
	gsave glev Setgray eofill grestore}
	{
	%drawing with current dash or color unclosed path 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	  stroke} ifelse 
	Cmsave1 setmatrix } ifelse
} def 

/drawarc
	{/glev exch def /Ar exch def
	/cx Ar 0 get Ar 2 get 2 div add def 
	/cy Ar 1 get Ar 3 get 2 div add def 
	Ar 2 get 0 eq {} {
	/hom Ar 3 get Ar 2 get div def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	%-- on change de transformation pour faire homothetie en (x,y) 
	cx cy [1 0 0 hom 0 0 ] transform
	/t1 exch neg cy add def 
	/t2 exch neg cx add def 
	[1 0 0 hom t2 t1 ] concat 
	newpath
	cx cy Ar 2 get 2 div Ar 5 get Ar 4 get add 64 div neg Ar 4 get 64 div neg arc
	closepath glev xsetgray stroke
	Cmsave1 setmatrix } ifelse
} def 


%------------------------------------------------------
% centred hard mark 
%------------------------------------------------------

% x y str ShowCString 
% on fait un show mais string est centre autour du point (x,y) 

/ShowCString { /str exch def /y exch def /x exch def 
 newpath 
 x y moveto 
 str true charpath flattenpath pathbbox 
 /y2 exch def /x2 exch def /y1 exch def /x1 exch def 
 x 2 mul x2 x1 add 2 div sub 
 y 2 mul y2 y1 add 2 div sub moveto str show 
 } def 

/drawpolymark {/glev exch def /Ar exch def 
	Ar 0 get Ar 1 get HardMark ShowCString 
	2 2 Ar length 1 sub 
	{/i exch def
	Ar i get Ar i 1 add get HardMark ShowCString
	}for
} def 

%---------------------------------------------------
% chaines de caracteres 
%---------------------------------------------------
/FBox {/Ar exch def /rot exch def /str exch def /y exch def /x exch def 
 newpath Ar 0 get Ar 1 get moveto 
	/sina rot sin def /cosa rot cos def 
	/-sina sina neg def 
	[cosa -sina sina cosa 0 0 ] CtmModif
 Ar 2 get 0 rlineto 0 Ar 3 get neg rlineto Ar 2 get neg 0 rlineto 
 0 Ar 3 get  rlineto  stroke CtmRestore 
 x y str rot ShowRotate 
 } def 

% x y str ang Showrotate 
% inverse du sens trigo 

/ShowRotate { /ang exch def /str exch def 
	/y exch def /x exch def 
	x y moveto 
	/sina ang sin def /cosa ang cos def 
	/-sina 0 sina sub def 
	[cosa -sina sina cosa 0 0 ] CtmModif
	str show 
	CtmRestore 
} def 

/HardMark (0) def 

%(Chaine de caracteres) x y flag angle [arfbox] Show

/Show { /Ar exch def 
	/rot exch def /flag exch def /y exch def /x exch def /str exch def 
	flag 1 eq 
	{x y str rot Ar FBox}
	{x y str rot ShowRotate } ifelse} def 

/L {/y2 exch def /x2 exch def /y1 exch def /x1 exch def 
    newpath x1 y1 moveto x2 y2 lineto stroke } def 

%---------------------------------------------------------
% drawing an axis 
% angle [nsep1,nsep2] ,[siz1,siz2,coeff] [x0,y0] drawaxis",
%---------------------------------------------------------

/drawaxis {/XX exch def /Arsize exch def /Arsep exch def /ang exch def 
	/Cmsave1 matrix def Cmsave1 currentmatrix pop
	/sina ang sin def /cosa ang cos def /-sina sina neg def 
	/x XX 0 get def /y XX 1 get def
	%-- on change de transformation pour tourner autour de (x,y) 
	x y [cosa sina -sina cosa 0 0 ] transform
	/t1 exch neg y add def 
	/t2 exch neg x add def 
	[cosa sina -sina cosa t2 t1 ] concat 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke 
	0 1 Arsep 1 get 1 sub
	{
	 % i don't want the value of the for indice 
	 pop
	newpath 
	x y moveto 
	0 1 Arsep 0 get 1 sub
		{
		 % i don't want the value of the for indice 
		 pop
		 Arsize 0 get 0  rlineto
		 0 Arsize 1 get rlineto 
	 	0 Arsize 1 get  neg rlineto }
		for 
	currentpoint /y exch def /x exch def 
	stroke 
	newpath x y moveto 0 Arsize 1 get Arsize 2 get mul rlineto
	stroke }
	for 
	Cmsave1 setmatrix } def 

%---------------------------------------------------------
% change and restore CTM
%---------------------------------------------------------

/CtmModif {
	/arg exch def 
	/Cmsave matrix def 
	Cmsave currentmatrix pop
	[1 0 0 -1 0 0 ] concat 
	arg concat 
} def 

/CtmRestore { Cmsave setmatrix } def 

/Thickness { /th exch def th 0 le {/th 0.1 def} if th setlinewidth} def 

/WhiteLev 15 def

/Setgray { WhiteLev div setgray} def 

/fillsolid { 0 setgray } def 

%--------------------------------------
% clip zones ( rectangle ) 
%-------------------------------------

/setclipzone {initclip 
	/h exch def /w exch def /y exch def /x exch def 
	newpath x y moveto w 0 rlineto 0 h rlineto w neg 0 rlineto 
	0 h neg rlineto closepath clip} def 

%------------------
% to change the position of a picture 
%------------------
/cm{28.346457 mul}def

/DesPosi { /YH exch def /XW exch def /YP exch def /XP exch def 
	XP cm YP cm neg translate 
	XW cm 6000 div YH cm 4240 div  scale } def 

0 setlinecap 
2 setlinejoin 
1 setlinewidth

%-- Color database 
/ColorR [0.000000 0.000000 0.000000 0.529412 0.498039 0.133333 0.000000 0.878431 0.000000 1.000000 1.000000 1.000000 0.933333 1.000000 1.000000 0.960784 1.000000 ] def
/ColorG [0.000000 0.000000 0.000000 0.807843 1.000000 0.545098 1.000000 1.000000 1.000000 0.647059 0.000000 0.000000 0.509804 1.000000 0.843137 0.960784 1.000000 ] def
/ColorB [0.000000 0.501961 1.000000 0.921569 0.831373 0.133333 0.000000 1.000000 1.000000 0.000000 0.000000 1.000000 0.933333 0.000000 0.000000 0.862745 1.000000 ] def

/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def

% to multiply all the fontsizes by a factor  scf
/scf 1.0 def

% set dash styles : max number is hardcoded to 6 
% /DashTab [[] [20 50 20 50]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/DashTab [[]  [50 20 50 20]   [50 30 20 30]  [80 30 20 30]  [110 30 20 30]  [110 30 50 30]] def 
/Setdash {/i exch  0 lmax 5 lmin def i  DashTab i get 0 setdash } def 

% style for drawing: color gray or dash 
/xsetgray { usecolor 0 le {Setdash} {Setgray} ifelse } def 

% default value for colormode 

/usecolor 1 def 

% changing fonts encoding 

/Courier findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Courier exch definefont pop

/Times-Roman findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Roman exch definefont pop

/Times-Bold findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-Bold exch definefont pop


/Times-BoldItalic findfont
dup length dict begin
  {1 index /FID ne {def} {pop pop} ifelse} forall
  /Encoding ISOLatin1Encoding def
  currentdict
  end
/Times-BoldItalic exch definefont pop

%------ End Main Program ------%
% XP YP XW YW DesPosi in the following code 
% will output the picture in the rectangle defined by 
% upper left point (XP,YP) wide :XW Height: YW
% the coordinates are given in centimeter and 
% are the (0,0) point is the down-left point of the paper 


1.3 1.3  scale 

/ColorR [0.000000 
0.000000 0.000000 0.000000 1.000000 1.000000 1.000000 1.000000 0.000000 0.000000 0.000000 
0.529412 0.000000 0.000000 0.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 
0.564706 0.690196 0.815686 0.501961 0.627451 0.752941 1.000000 1.000000 1.000000 1.000000 
1.000000 0.0 1.0] def
/ColorG [0.000000 
0.000000 1.000000 1.000000 0.000000 0.000000 0.000000 1.000000 0.000000 0.000000 0.000000 
0.807843 0.564706 0.690196 0.815686 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.000000 0.000000 0.000000 0.188235 0.250980 0.376471 0.501961 0.627451 0.752941 0.878431 
0.843137 0.0 1.0] def
/ColorB [0.000000 
1.000000 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 0.564706 0.690196 0.815686 
1.000000 0.000000 0.000000 0.000000 0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 
0.564706 0.690196 0.815686 0.000000 0.000000 0.000000 0.501961 0.627451 0.752941 0.878431 
0.000000 0.0 1.0] def
% Dessin en bas a gauche de taille 3000,2120
90 rotate 10 640 neg translate [0.5 5 div 0 0 0.5 5 div neg  0 3120 5 div] concat
% Init driver 
/PaintBackground {WhiteLev 2 add background eq {}{ (drawbox) 4 [background 1 add] [0 0 6000 4240] dogrey}ifelse } def
5 Thickness
% 3 setalufunction
-1 -1 200000 200000 setclipzone
[] 0 setdash
/Times-Roman findfont 100 scf mul scalefont setfont
fillsolid
[] 0 setdash
0 Setcolor
/background 33 def PaintBackground
%--use color 1 
fillsolid
[] 0 setdash
0 Setcolor
/WhiteLev 31 def
/Setgray {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/Setcolor {/i exch def ColorR i get ColorG i get ColorB i get setrgbcolor } def 
/usecolor 1 def 
%--end use color 1 
% End init driver 
/WhiteLev 31 def
%Latex:\begin{picture}(6000,4240)(0,0)
%--use color 0 
0 Setcolor
fillsolid
[] 0 setdash
/WhiteLev 16 def
/Setgray { WhiteLev div setgray } def 
/Setcolor { WhiteLev div setgray } def 
/usecolor 0  def 
%--end use color 0 
/Times-Roman findfont 80 scf mul scalefont setfont
5 Thickness
-1 -1 200000 200000 setclipzone
fillsolid
[] 0 setdash
/Times-Roman findfont 80 scf mul scalefont setfont
[] 0 setdash
fillsolid
 (drawbox) 4 [ 0]
[375 530 2250 3180 
] dogrey 
fillsolid
(80) 329 3851 0  0.00 [329 3781 92 90] Show
%Latex:\myput{329}{389}{8}{80}
 (drawsegs) 4 [ 0]
[375 3710 375 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[488 3710 488 3741 
] dogrey 
(84) 554 3851 0  0.00 [554 3781 92 90] Show
%Latex:\myput{554}{389}{8}{84}
 (drawsegs) 4 [ 0]
[600 3710 600 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[713 3710 713 3741 
] dogrey 
(88) 779 3851 0  0.00 [779 3781 92 90] Show
%Latex:\myput{779}{389}{8}{88}
 (drawsegs) 4 [ 0]
[825 3710 825 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[938 3710 938 3741 
] dogrey 
(92) 1004 3851 0  0.00 [1004 3781 92 90] Show
%Latex:\myput{1004}{389}{8}{92}
 (drawsegs) 4 [ 0]
[1050 3710 1050 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1163 3710 1163 3741 
] dogrey 
(96) 1229 3851 0  0.00 [1229 3781 92 90] Show
%Latex:\myput{1229}{389}{8}{96}
 (drawsegs) 4 [ 0]
[1275 3710 1275 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1388 3710 1388 3741 
] dogrey 
(100) 1431 3851 0  0.00 [1431 3781 138 90] Show
%Latex:\myput{1431}{389}{8}{100}
 (drawsegs) 4 [ 0]
[1500 3710 1500 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1613 3710 1613 3741 
] dogrey 
(104) 1656 3851 0  0.00 [1656 3781 138 90] Show
%Latex:\myput{1656}{389}{8}{104}
 (drawsegs) 4 [ 0]
[1725 3710 1725 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1838 3710 1838 3741 
] dogrey 
(108) 1881 3851 0  0.00 [1881 3781 138 90] Show
%Latex:\myput{1881}{389}{8}{108}
 (drawsegs) 4 [ 0]
[1950 3710 1950 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[2063 3710 2063 3741 
] dogrey 
(112) 2106 3851 0  0.00 [2106 3781 138 90] Show
%Latex:\myput{2106}{389}{8}{112}
 (drawsegs) 4 [ 0]
[2175 3710 2175 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[2288 3710 2288 3741 
] dogrey 
(116) 2331 3851 0  0.00 [2331 3781 138 90] Show
%Latex:\myput{2331}{389}{8}{116}
 (drawsegs) 4 [ 0]
[2400 3710 2400 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[2513 3710 2513 3741 
] dogrey 
(120) 2556 3851 0  0.00 [2556 3781 138 90] Show
%Latex:\myput{2556}{389}{8}{120}
 (drawsegs) 4 [ 0]
[2625 3710 2625 3773 
] dogrey 
(0.06) 154 3730 0  0.00 [154 3660 185 90] Show
%Latex:\myput{154}{510}{8}{0.06}
 (drawsegs) 4 [ 0]
[375 3710 345 3710 
] dogrey 
 (drawsegs) 4 [ 0]
[375 3445 360 3445 
] dogrey 
(0.07) 154 3200 0  0.00 [154 3130 185 90] Show
%Latex:\myput{154}{1040}{8}{0.07}
 (drawsegs) 4 [ 0]
[375 3180 345 3180 
] dogrey 
 (drawsegs) 4 [ 0]
[375 2915 360 2915 
] dogrey 
(0.08) 154 2670 0  0.00 [154 2600 185 90] Show
%Latex:\myput{154}{1570}{8}{0.08}
 (drawsegs) 4 [ 0]
[375 2650 345 2650 
] dogrey 
 (drawsegs) 4 [ 0]
[375 2385 360 2385 
] dogrey 
(0.09) 154 2140 0  0.00 [154 2070 185 90] Show
%Latex:\myput{154}{2100}{8}{0.09}
 (drawsegs) 4 [ 0]
[375 2120 345 2120 
] dogrey 
 (drawsegs) 4 [ 0]
[375 1855 360 1855 
] dogrey 
(0.10) 154 1610 0  0.00 [154 1540 185 90] Show
%Latex:\myput{154}{2630}{8}{0.10}
 (drawsegs) 4 [ 0]
[375 1590 345 1590 
] dogrey 
 (drawsegs) 4 [ 0]
[375 1325 360 1325 
] dogrey 
(0.11) 154 1080 0  0.00 [154 1010 185 90] Show
%Latex:\myput{154}{3160}{8}{0.11}
 (drawsegs) 4 [ 0]
[375 1060 345 1060 
] dogrey 
 (drawsegs) 4 [ 0]
[375 795 360 795 
] dogrey 
(0.12) 154 550 0  0.00 [154 480 185 90] Show
%Latex:\myput{154}{3690}{8}{0.12}
 (drawsegs) 4 [ 0]
[375 530 345 530 
] dogrey 
[] 0 setdash
fillsolid
375 530 2250 3180 setclipzone
[] 0 setdash
/closeflag false def
 (drawpoly) 300 [ 0]
[-975 727 -951 740 -926 753 -900 767 -875 780 -850 794 -824 807 -798 821 -772 834 -745 848 
-719 862 -692 875 -665 889 -638 903 -610 917 -583 931 -555 945 -527 959 -498 973 -470 987 
-441 1001 -412 1015 -383 1029 -353 1044 -324 1058 -294 1072 -264 1086 -233 1101 -203 1115 -172 1130 
-141 1144 -109 1159 -78 1173 -46 1188 -14 1202 19 1217 51 1232 84 1246 117 1261 151 1276 
184 1291 218 1305 252 1320 287 1335 321 1350 356 1365 392 1380 427 1395 463 1410 499 1425 
536 1440 572 1455 609 1470 646 1485 684 1500 722 1515 760 1530 798 1545 837 1561 876 1576 
915 1591 955 1606 995 1621 1035 1637 1076 1652 1117 1667 1158 1682 1200 1697 1242 1713 1284 1728 
1326 1743 1369 1759 1413 1774 1456 1789 1500 1804 1544 1820 1589 1835 1634 1850 1679 1866 1725 1881 
1771 1896 1817 1911 1864 1927 1911 1942 1959 1957 2006 1972 2055 1987 2103 2003 2152 2018 2202 2033 
2251 2048 2302 2063 2352 2079 2403 2094 2455 2109 2506 2124 2558 2139 2611 2154 2664 2169 2717 2184 
2771 2199 2826 2214 2880 2229 2935 2244 2991 2258 3047 2273 3103 2288 3160 2303 3218 2317 3275 2332 
3334 2347 3392 2361 3451 2376 3511 2390 3571 2405 3632 2419 3693 2434 3754 2448 3816 2462 3879 2477 
3942 2491 4005 2505 4069 2519 4133 2533 4198 2547 4264 2561 4330 2575 4396 2589 4464 2603 4531 2617 
4599 2630 4668 2644 4737 2658 4807 2671 4877 2685 4948 2698 5019 2711 5091 2724 5164 2738 5237 2751 
5310 2764 5385 2777 5460 2790 5535 2803 5611 2815 5688 2828 5765 2841 5843 2853 5921 2866 6000 2878 
] dogrey 
fillsolid
/absolu true def
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#2b put
 (drawpolymark) 300 [ 0]
[-975 3820 -951 3549 -926 3161 -900 2777 -875 2428 -850 2119 -824 1857 -798 1646 -772 1479 -745 1363 
-719 1277 -692 1216 -665 1175 -638 1148 -610 1130 -583 1119 -555 1113 -527 1111 -498 1110 -470 1113 
-441 1116 -412 1121 -383 1127 -353 1137 -324 1143 -294 1154 -264 1163 -233 1170 -203 1179 -172 1189 
-141 1199 -109 1209 -78 1219 -46 1231 -14 1244 19 1255 51 1266 84 1274 117 1280 151 1284 
184 1282 218 1276 252 1265 287 1252 321 1249 356 1263 392 1294 427 1343 463 1390 499 1414 
536 1399 572 1370 609 1362 646 1364 684 1396 722 1433 760 1463 798 1484 837 1504 876 1527 
915 1557 955 1589 995 1619 1035 1636 1076 1638 1117 1632 1158 1628 1200 1646 1242 1694 1284 1750 
1326 1782 1369 1786 1413 1777 1456 1774 1500 1779 1544 1800 1589 1831 1634 1863 1679 1889 1725 1907 
1771 1897 1817 1869 1864 1854 1911 1869 1959 1910 2006 1962 2055 2018 2103 2026 2152 1991 2202 1961 
2251 1984 2302 2050 2352 2088 2403 2059 2455 2031 2506 2062 2558 2146 2611 2304 2664 2523 2717 2816 
2771 3141 2826 3432 2880 3658 2935 3803 2991 3892 3047 3931 3103 3948 3160 3938 3218 3910 3275 3879 
3334 3839 3392 3796 3451 3747 3511 3698 3571 3647 3632 3599 3693 3552 3754 3509 3816 3466 3879 3427 
3942 3387 4005 3352 4069 3314 4133 3279 4198 3246 4264 3215 4330 3182 4396 3153 4464 3130 4531 3104 
4599 3086 4668 3067 4737 3054 4807 3043 4877 3038 4948 3038 5019 3046 5091 3062 5164 3093 5237 3135 
5310 3198 5385 3282 5460 3402 5535 3569 5611 3807 5688 4116 5765 4512 5843 4998 5921 5584 6000 6246 
] dogrey 
/absolu true def
/Times-Roman findfont 80 scf mul scalefont setfont
[] 0 setdash
fillsolid
-1 -1 200000 200000 setclipzone
[] 0 setdash
fillsolid
 (drawbox) 4 [ 0]
[375 530 2250 3180 
] dogrey 
fillsolid
(80) 329 3851 0  0.00 [329 3781 92 90] Show
%Latex:\myput{329}{389}{8}{80}
 (drawsegs) 4 [ 0]
[375 3710 375 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[488 3710 488 3741 
] dogrey 
(84) 554 3851 0  0.00 [554 3781 92 90] Show
%Latex:\myput{554}{389}{8}{84}
 (drawsegs) 4 [ 0]
[600 3710 600 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[713 3710 713 3741 
] dogrey 
(88) 779 3851 0  0.00 [779 3781 92 90] Show
%Latex:\myput{779}{389}{8}{88}
 (drawsegs) 4 [ 0]
[825 3710 825 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[938 3710 938 3741 
] dogrey 
(92) 1004 3851 0  0.00 [1004 3781 92 90] Show
%Latex:\myput{1004}{389}{8}{92}
 (drawsegs) 4 [ 0]
[1050 3710 1050 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1163 3710 1163 3741 
] dogrey 
(96) 1229 3851 0  0.00 [1229 3781 92 90] Show
%Latex:\myput{1229}{389}{8}{96}
 (drawsegs) 4 [ 0]
[1275 3710 1275 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1388 3710 1388 3741 
] dogrey 
(100) 1431 3851 0  0.00 [1431 3781 138 90] Show
%Latex:\myput{1431}{389}{8}{100}
 (drawsegs) 4 [ 0]
[1500 3710 1500 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1613 3710 1613 3741 
] dogrey 
(104) 1656 3851 0  0.00 [1656 3781 138 90] Show
%Latex:\myput{1656}{389}{8}{104}
 (drawsegs) 4 [ 0]
[1725 3710 1725 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[1838 3710 1838 3741 
] dogrey 
(108) 1881 3851 0  0.00 [1881 3781 138 90] Show
%Latex:\myput{1881}{389}{8}{108}
 (drawsegs) 4 [ 0]
[1950 3710 1950 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[2063 3710 2063 3741 
] dogrey 
(112) 2106 3851 0  0.00 [2106 3781 138 90] Show
%Latex:\myput{2106}{389}{8}{112}
 (drawsegs) 4 [ 0]
[2175 3710 2175 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[2288 3710 2288 3741 
] dogrey 
(116) 2331 3851 0  0.00 [2331 3781 138 90] Show
%Latex:\myput{2331}{389}{8}{116}
 (drawsegs) 4 [ 0]
[2400 3710 2400 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[2513 3710 2513 3741 
] dogrey 
(120) 2556 3851 0  0.00 [2556 3781 138 90] Show
%Latex:\myput{2556}{389}{8}{120}
 (drawsegs) 4 [ 0]
[2625 3710 2625 3773 
] dogrey 
(0.06) 154 3730 0  0.00 [154 3660 185 90] Show
%Latex:\myput{154}{510}{8}{0.06}
 (drawsegs) 4 [ 0]
[375 3710 345 3710 
] dogrey 
 (drawsegs) 4 [ 0]
[375 3445 360 3445 
] dogrey 
(0.07) 154 3200 0  0.00 [154 3130 185 90] Show
%Latex:\myput{154}{1040}{8}{0.07}
 (drawsegs) 4 [ 0]
[375 3180 345 3180 
] dogrey 
 (drawsegs) 4 [ 0]
[375 2915 360 2915 
] dogrey 
(0.08) 154 2670 0  0.00 [154 2600 185 90] Show
%Latex:\myput{154}{1570}{8}{0.08}
 (drawsegs) 4 [ 0]
[375 2650 345 2650 
] dogrey 
 (drawsegs) 4 [ 0]
[375 2385 360 2385 
] dogrey 
(0.09) 154 2140 0  0.00 [154 2070 185 90] Show
%Latex:\myput{154}{2100}{8}{0.09}
 (drawsegs) 4 [ 0]
[375 2120 345 2120 
] dogrey 
 (drawsegs) 4 [ 0]
[375 1855 360 1855 
] dogrey 
(0.10) 154 1610 0  0.00 [154 1540 185 90] Show
%Latex:\myput{154}{2630}{8}{0.10}
 (drawsegs) 4 [ 0]
[375 1590 345 1590 
] dogrey 
 (drawsegs) 4 [ 0]
[375 1325 360 1325 
] dogrey 
(0.11) 154 1080 0  0.00 [154 1010 185 90] Show
%Latex:\myput{154}{3160}{8}{0.11}
 (drawsegs) 4 [ 0]
[375 1060 345 1060 
] dogrey 
 (drawsegs) 4 [ 0]
[375 795 360 795 
] dogrey 
(0.12) 154 550 0  0.00 [154 480 185 90] Show
%Latex:\myput{154}{3690}{8}{0.12}
 (drawsegs) 4 [ 0]
[375 530 345 530 
] dogrey 
[] 0 setdash
fillsolid
375 530 2250 3180 setclipzone
[50 20 50 20 ] 0 setdash
/closeflag false def
 (drawpoly) 40 [ 0]
[375 1813 493 1837 612 1861 730 1884 849 1906 967 1928 1086 1950 1204 1972 1322 1992 1441 2013 
1559 2033 1678 2053 1796 2072 1914 2091 2033 2109 2151 2128 2270 2146 2388 2164 2507 2181 2625 2198 
] dogrey 
fillsolid
/absolu true def
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#b4 put
 (drawpolymark) 40 [ 0]
[375 1813 493 1837 612 1860 730 1883 849 1906 967 1929 1086 1950 1204 1972 1322 1992 1441 2012 
1559 2034 1678 2052 1796 2073 1914 2091 2033 2109 2151 2129 2270 2145 2388 2164 2507 2180 2625 2199 
] dogrey 
/absolu true def
/Times-Roman findfont 80 scf mul scalefont setfont
[] 0 setdash
fillsolid
-1 -1 200000 200000 setclipzone
[] 0 setdash
fillsolid
 (drawbox) 4 [ 0]
[1412 583 1190 318 
] dogrey 
fillsolid
 (drawsegs) 4 [ 0]
[1435 663 1547 663 
] dogrey 
(Real volatility) 1570 664 0  0.00 [1570 594 694 90] Show
%Latex:\myput{1570}{3576}{8}{Real volatility}
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#2b put
 (drawpolymark) 2 [ 0]
[1491 716 
] dogrey 
/absolu true def
/Times-Roman findfont 80 scf mul scalefont setfont
[] 0 setdash
fillsolid
fillsolid
(Approached Volatility) 1570 717 0  0.00 [1570 647 972 90] Show
%Latex:\myput{1570}{3523}{8}{Approached Volatility}
 (drawsegs) 4 [ 1]
[1435 769 1547 769 
] dogrey 
(Real Implied volatility) 1570 770 0  0.00 [1570 700 1064 90] Show
%Latex:\myput{1570}{3470}{8}{Real Implied volatility}
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#b4 put
 (drawpolymark) 2 [ 0]
[1491 822 
] dogrey 
/absolu true def
/Times-Roman findfont 80 scf mul scalefont setfont
[] 0 setdash
fillsolid
fillsolid
(Approached Implied volatility) 1570 823 0  0.00 [1570 753 1342 90] Show
%Latex:\myput{1570}{3417}{8}{Approached Implied volatility}
[] 0 setdash
fillsolid
(Volatility in Dupire model: Step 12) 690 276 0  0.00 [690 206 1620 90] Show
%Latex:\myput{690}{3964}{8}{Volatility in Dupire model: Step 12}
(real call approached call real put approached put) -1007 -40835 0  0.00 [-1007 -40905 2268 90] Show
%Latex:\myput{-1007}{45075}{8}{real call approached call real put approached put}
[] 0 setdash
fillsolid
 (drawbox) 4 [ 0]
[3375 530 2250 3180 
] dogrey 
fillsolid
(80) 3329 3851 0  0.00 [3329 3781 92 90] Show
%Latex:\myput{3329}{389}{8}{80}
 (drawsegs) 4 [ 0]
[3375 3710 3375 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[3488 3710 3488 3741 
] dogrey 
(84) 3554 3851 0  0.00 [3554 3781 92 90] Show
%Latex:\myput{3554}{389}{8}{84}
 (drawsegs) 4 [ 0]
[3600 3710 3600 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[3713 3710 3713 3741 
] dogrey 
(88) 3779 3851 0  0.00 [3779 3781 92 90] Show
%Latex:\myput{3779}{389}{8}{88}
 (drawsegs) 4 [ 0]
[3825 3710 3825 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[3938 3710 3938 3741 
] dogrey 
(92) 4004 3851 0  0.00 [4004 3781 92 90] Show
%Latex:\myput{4004}{389}{8}{92}
 (drawsegs) 4 [ 0]
[4050 3710 4050 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[4163 3710 4163 3741 
] dogrey 
(96) 4229 3851 0  0.00 [4229 3781 92 90] Show
%Latex:\myput{4229}{389}{8}{96}
 (drawsegs) 4 [ 0]
[4275 3710 4275 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[4388 3710 4388 3741 
] dogrey 
(100) 4431 3851 0  0.00 [4431 3781 138 90] Show
%Latex:\myput{4431}{389}{8}{100}
 (drawsegs) 4 [ 0]
[4500 3710 4500 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[4613 3710 4613 3741 
] dogrey 
(104) 4656 3851 0  0.00 [4656 3781 138 90] Show
%Latex:\myput{4656}{389}{8}{104}
 (drawsegs) 4 [ 0]
[4725 3710 4725 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[4838 3710 4838 3741 
] dogrey 
(108) 4881 3851 0  0.00 [4881 3781 138 90] Show
%Latex:\myput{4881}{389}{8}{108}
 (drawsegs) 4 [ 0]
[4950 3710 4950 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[5063 3710 5063 3741 
] dogrey 
(112) 5106 3851 0  0.00 [5106 3781 138 90] Show
%Latex:\myput{5106}{389}{8}{112}
 (drawsegs) 4 [ 0]
[5175 3710 5175 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[5288 3710 5288 3741 
] dogrey 
(116) 5331 3851 0  0.00 [5331 3781 138 90] Show
%Latex:\myput{5331}{389}{8}{116}
 (drawsegs) 4 [ 0]
[5400 3710 5400 3773 
] dogrey 
 (drawsegs) 4 [ 0]
[5513 3710 5513 3741 
] dogrey 
(120) 5556 3851 0  0.00 [5556 3781 138 90] Show
%Latex:\myput{5556}{389}{8}{120}
 (drawsegs) 4 [ 0]
[5625 3710 5625 3773 
] dogrey 
(0) 3293 3730 0  0.00 [3293 3660 46 90] Show
%Latex:\myput{3293}{510}{8}{0}
 (drawsegs) 4 [ 0]
[3375 3710 3345 3710 
] dogrey 
 (drawsegs) 4 [ 0]
[3375 3445 3360 3445 
] dogrey 
(4) 3293 3200 0  0.00 [3293 3130 46 90] Show
%Latex:\myput{3293}{1040}{8}{4}
 (drawsegs) 4 [ 0]
[3375 3180 3345 3180 
] dogrey 
 (drawsegs) 4 [ 0]
[3375 2915 3360 2915 
] dogrey 
(8) 3293 2670 0  0.00 [3293 2600 46 90] Show
%Latex:\myput{3293}{1570}{8}{8}
 (drawsegs) 4 [ 0]
[3375 2650 3345 2650 
] dogrey 
 (drawsegs) 4 [ 0]
[3375 2385 3360 2385 
] dogrey 
(12) 3247 2140 0  0.00 [3247 2070 92 90] Show
%Latex:\myput{3247}{2100}{8}{12}
 (drawsegs) 4 [ 0]
[3375 2120 3345 2120 
] dogrey 
 (drawsegs) 4 [ 0]
[3375 1855 3360 1855 
] dogrey 
(16) 3247 1610 0  0.00 [3247 1540 92 90] Show
%Latex:\myput{3247}{2630}{8}{16}
 (drawsegs) 4 [ 0]
[3375 1590 3345 1590 
] dogrey 
 (drawsegs) 4 [ 0]
[3375 1325 3360 1325 
] dogrey 
(20) 3247 1080 0  0.00 [3247 1010 92 90] Show
%Latex:\myput{3247}{3160}{8}{20}
 (drawsegs) 4 [ 0]
[3375 1060 3345 1060 
] dogrey 
 (drawsegs) 4 [ 0]
[3375 795 3360 795 
] dogrey 
(24) 3247 550 0  0.00 [3247 480 92 90] Show
%Latex:\myput{3247}{3690}{8}{24}
 (drawsegs) 4 [ 0]
[3375 530 3345 530 
] dogrey 
[] 0 setdash
fillsolid
3375 530 2250 3180 setclipzone
[] 0 setdash
/closeflag false def
 (drawpoly) 40 [ 0]
[3375 1056 3493 1331 3612 1602 3730 1867 3849 2123 3967 2368 4086 2596 4204 2805 4322 2992 4441 3153 
4559 3290 4678 3401 4796 3489 4914 3557 5033 3607 5151 3642 5270 3667 5388 3683 5507 3694 5625 3701 
] dogrey 
fillsolid
/absolu true def
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#2b put
 (drawpolymark) 40 [ 0]
[3375 1056 3493 1331 3612 1602 3730 1867 3849 2123 3967 2368 4086 2596 4204 2805 4322 2992 4441 3153 
4559 3290 4678 3401 4796 3489 4914 3557 5033 3607 5151 3642 5270 3667 5388 3683 5507 3694 5625 3701 
] dogrey 
/absolu true def
/Times-Roman findfont 80 scf mul scalefont setfont
[50 20 50 20 ] 0 setdash
/closeflag false def
 (drawpoly) 40 [ 0]
[3375 3706 3493 3701 3612 3692 3730 3677 3849 3653 3967 3616 4086 3562 4204 3488 4322 3392 4441 3270 
4559 3122 4678 2951 4796 2755 4914 2540 5033 2308 5151 2063 5270 1806 5388 1542 5507 1273 5625 1000 
] dogrey 
fillsolid
/absolu true def
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#b4 put
 (drawpolymark) 40 [ 0]
[3375 3706 3493 3702 3612 3694 3730 3680 3849 3658 3967 3623 4086 3572 4204 3502 4322 3410 4441 3293 
4559 3150 4678 2983 4796 2792 4914 2580 5033 2351 5151 2108 5270 1854 5388 1591 5507 1323 5625 1051 
] dogrey 
/absolu true def
/Times-Roman findfont 80 scf mul scalefont setfont
[] 0 setdash
fillsolid
-1 -1 200000 200000 setclipzone
[] 0 setdash
fillsolid
 (drawbox) 4 [ 0]
[4902 583 700 318 
] dogrey 
fillsolid
 (drawsegs) 4 [ 0]
[4925 663 5038 663 
] dogrey 
(real call) 5060 664 0  0.00 [5060 594 416 90] Show
%Latex:\myput{5060}{3576}{8}{real call}
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#2b put
 (drawpolymark) 2 [ 0]
[4981 716 
] dogrey 
/absolu true def
/Times-Roman findfont 80 scf mul scalefont setfont
[] 0 setdash
fillsolid
fillsolid
(approached call) 5060 717 0  0.00 [5060 647 694 90] Show
%Latex:\myput{5060}{3523}{8}{approached call}
 (drawsegs) 4 [ 1]
[4925 769 5038 769 
] dogrey 
(real put) 5060 770 0  0.00 [5060 700 370 90] Show
%Latex:\myput{5060}{3470}{8}{real put}
/Symbol findfont 80 scf mul scalefont setfont
HardMark 0 16#b4 put
 (drawpolymark) 2 [ 0]
[4981 822 
] dogrey 
/absolu true def
/Times-Roman findfont 80 scf mul scalefont setfont
[] 0 setdash
fillsolid
fillsolid
(approached put) 5060 823 0  0.00 [5060 753 648 90] Show
%Latex:\myput{5060}{3417}{8}{approached put}
[] 0 setdash
fillsolid
(Call and Put price in Dupire model) 3713 276 0  0.00 [3713 206 1574 90] Show
%Latex:\myput{3713}{3964}{8}{Call and Put price in Dupire model}
%Latex:\end{picture}
 showpage

 end saved restore 

