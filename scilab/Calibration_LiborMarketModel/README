**********************************
			PREMIA
	***********************************	



The program directory contains 13 files:

 - this documentation file. 
 - the source program file: "calibrate_libor.cpp" written in C++ 
 - a binary executable file "calibrate.out" generated by the compilation of "calibrate_libor.cpp"
 - an output file of calibration results: "cali_result"
 - an example of input market data:  "market_data.xml"
 - header and link files (altogether 8 files): "min.h"   "min.cpp"   "routines.c"   "routines.cpp"   "routines.o"   "f2c.h"   "libf2c.a"   "iterate"


Compilation 
===========

Compilation command under Linux:

g++ calibrate_libor.cpp min.cpp routines.cpp libf2c.a -o calibrate 

generates the executable binary file "calibrate". 


Data input 
==========

 Before running the calibration routine, the user should 
 prepare the data according to the format described below, 
 or use the existing example "market_data.xml". 


Execution
=========

 Type ./calibrate to run the calibration program. 

 Five parameters can be calibrated in this program:

 - b: 0<= b <= 10, initial value 5.01

 - ginf: 0 <= ginf <= 1, initial value 0.56.

 - eta1: 0 <= eta1 <= 2, initial value 1.22.

 - eta2: 0 <= eta2 <= 1, initial value 0.001.

 - rhoinf: 0 <= rhoinf <= 1, initial value 0.29 


 Each of the five parameters b, ginf, eta1, eta2, rhoinf can be calibrated separately. 

 The user is allowed to choose the parameters to be calibrated. 
 If a parameter is calibrated, upper and lower bounds and initial 
 search condition should be provided for this parameter. 
 Default values are suggested by the program, but they can be changed 
 under the condition lower bound < initial value < upper bound. 
 If a parameter is not calibrated, its value should be fixed by the user. 
 Default values are suggested by the program. 

 The program computes the maximum swaption maturity MS available in the market 
 data file (in years) and the user is asked to provide the number of swaption maturities 
 to be used for calibration (in years, ranging from 1 to MS). 

 Answering ``yes'' to a question sets the value of a parameter to its suggested default value. 


Output of results
=================

 Results are pressented at the end of program and in the result file "cali_result"


XML file structure
==================

 In this section we describe in detail the format used to structure the input 
 data in XML. 

 The header of the file consists in the following information: 

 <date> calendar date </date>
 <delta delta="0.5"> unit of tenor structure is 0.5 year </delta>
 <maxnumber> maximum number of units in tenor structure +1 </maxnumber>
 
 The data is then formatted in three main sections: 

 Discount factors

 <disfact> This data section is relative to discount factors. 
 <dismaturity> list of discount factor maturities </dismaturity>
 <discountfactor> corresponding discount factors </discountfactor>
 <srmaturity> list of swap rate maturities </srmaturity>
 <swaprate> corresponding swap rates </swaprate>
 </disfact>

 The user can provide discount factors or alternatively 
 swap rates which can be used to derive the discount factors. 

 In case discount factors are provided, the data of discount factors 
 and corresponding maturity should be put in <dismaturity> and <discountfactor> 
 and <srmaturity> and <swaprate> should be filled with zeros. 
 Otherwise the swap rate and corresponding maturities should be put in 
 <srmaturity> and <swaprate> and <dismaturity> and <discountfactor> 
 should be filled with zeros. 

 Caplet volatilities 

 <capvola> This data section containes the caplet volatilities. 
 <atmcapmaturity> list of ATM caplet maturities </atmcapmaturity>
 <atmcapvolatility> ATM caplet volatilities </atmcapvolatility>
 <itmotmcapmaturity> ITM or OTM caplet maturities </itmotmcapmaturity>
 <itmotmcapshiftmaturity> list of ITM or OTM caplet volatility shifts </itmotmcapshiftmaturity>
 <itmotmcapshift> ITM or OTM caplet volatility shifts </itmotmcapshift>
 <capshiftmaturity> list of caplet shift maturities </capshiftmaturity>
 <capshift> caplet volatility shifts </capshift>
 <capsmile> caplet volatility smiles </capsmile>
 </capvola>

 The user can provide ATM caplet volatilities or ITM or OTM caplet volatilities as well 
 as caplet volatility smiles if available from the data. 
 In case ATM data is provided, put zeros inside <itmotmcapmaturity>. 
 Otherwise, put zeros inside <atmcapmaturity>.

 Swaption volatilities

 <swapvola> This data section contains the swaption volatilities. 
 <atmswapmaturity> list of ATM swaption maturities </atmswapmaturity>
 <atmswapexpiry> list of ATM swaption expiry dates </atmswapexpiry>
 <atmswapvolatility> corresponding ATM swaption volatilities </atmswapvolatility>
 <itmotmswapmaturity> list of ITM or OTM swaption maturities </itmotmswapmaturity> 
 <itmotmswapexpiry> list of ITM or OTM swaption expiry dates </itmotmswapexpiry>
 <itmotmswapvolatility> corresponding ITM or OTM swaption volatilities </itmotmswapvolatility>
 <itmotmswapshiftmaturity> list of ITM or OTM swaption shift maturities </itmotmswapshiftmaturity>
 <itmotmswapshift> ITM or OTM swaption volatility shifts </itmotmswapshift>
 <swapshiftmaturity> list of swaption shift maturities </swapshiftmaturity>
 <swapshift> swaption volatility shifts </swapshift>
 <swapsmile> swaption volatility smiles </swapsmile>
 </swapvola>


	

The PREMIA TEAM



**********************************
For questions or comments visit
http://www.premia.fr
***********************************

